import argparse
import can
from can.interface import Bus
from CAN.CanDecoder import CanDecoder
from CAN.CanID_autogenerated import *


# Call parameters
parser = argparse.ArgumentParser()
parser.add_argument("--dbc_file", type=str, help="path to dbc file", required=True)
parser.add_argument("--log_file", type=str, help="path to log file", required=True)
args = parser.parse_args()

# Init can socket
can.rc['interface'] = 'socketcan'
can.rc['channel'] = 'vcan0'
can.rc['bitrate'] = 250000
bus = Bus()

# config can decoder
canDecoder = CanDecoder(args.dbc_file)

print("GO!")
while 1:
    for msg in bus:
        try:
            # Decode frame
            frame = canDecoder.decode_payload(msg.arbitration_id, msg.data)

            # Get SBT IDs
            sourceIDname = canDecoder.decode_sourceID_name(msg.arbitration_id)
            paramIDname = canDecoder.decode_paramID_name(msg.arbitration_id)

            print("New message from CAN!")
            # Print all signals from frame to MQTT
            for signal in frame:
                print("Sending to MQTT: {}/{}/{} = {}".format(sourceIDname,
                                                                        paramIDname, signal, frame[signal]))
            print()

        except Exception as e:
            print("Unknown frame: {}#{}".format(
                msg.arbitration_id, msg.data))
            print("Error: {}".format(e))
            print()

