import argparse
from CAN.CanDecoder import CanDecoder
from CAN.CanID_autogenerated import *


# Call parameters
parser = argparse.ArgumentParser()
parser.add_argument("--dbc_file", type=str, help="path to dbc file", required=True)
parser.add_argument("--log_file", type=str, help="path to log file", required=True)
args = parser.parse_args()


# config can decoder
canDecoder = CanDecoder(args.dbc_file)

with open(args.log_file, 'r') as file:

    for line in file:
        line = line.split(' ')
        time = line[0][line[0].index('(')+1 :line[0].index(')')]
        [extID, payload] = line[2].split('#')
        extID = int(extID, 16)
        payload = bytearray.fromhex(payload)

        try:
            # Decode frame
            frame = canDecoder.decode_payload(extID, payload)
            # Get SBT IDs
            sourceIDname = canDecoder.decode_sourceID_name(extID)
            paramIDname = canDecoder.decode_paramID_name(extID)

        except Exception as e:
            print("Unknown frame: {}#{}".format(extID, payload))
            print("Error: {}".format(e))
            print()

        finally:
            csv_line = ""
            csv_line += "{},{},".format("time", time)
            for signal in frame:
                csv_line += "{},{},".format(signal, frame[signal])

            csv_line = csv_line[:-1]

            with open("output/{}-{}.csv".format(sourceIDname, paramIDname), 'a+') as f:
                f.write(csv_line+"\n")
            f.close()
            # print(csv_line)

    file.close()




